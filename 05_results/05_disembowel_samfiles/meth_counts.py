import argparse
from BismarkSam import BismarkSam


# Parameters
parser = argparse.ArgumentParser(description = 'Parse parameters ')
parser.add_argument('-i', '--input', help = 'A sorted SAM file generated by Bismark', required = True)
parser.add_argument('-o', '--output', help = 'Output file', required = True)
args = parser.parse_args()

# Import samfile line by line
samfile = [line.split("\t") for line in open(args.input, "r").read().split("\n")]
# The last line is empty, so remove it
samfile = [x for x in samfile if x != [''] ]
# Run reads through the class
samfile = [ BismarkSam(read) for read in samfile]

# Create an output file
outfile = open(args.output, 'w')
header = ['chr', 'mC', 'uC', 'total','is_cluster']
outfile.write('\t'.join(header))

# run `mC_per_read on each read`
for read in samfile:
    outline = read.mC_per_read()
    outline = [ str(read) for read in outline]
    outfile.write('\n' + '\t'.join(outline))

outfile.close()